{"ast":null,"code":"var _jsxFileName = \"/home/aliraza/Documents/ReactProject/demoautomotive/src/containers/OrderStatus/OrderStatus.js\";\nimport React, { Component } from \"react\";\nimport axios from \"../../axios\";\nimport OrderDataTable from \"../../components/OrderDataTable/OrderDataTable\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport \"./OrderStatus.css\";\nexport default class OrderStatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderstatus: [],\n      loading: true\n    };\n  } // Fetch data from API after the component have been loaded;\n\n\n  componentDidMount() {\n    console.log(\"Counter\");\n    axios.get(\"api/values/purchaseList\").then(response => {\n      this.setState({\n        orderstatus: response.data,\n        loading: false\n      });\n    }).catch(err => {\n      console.log(\"Server Down\" + err);\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      orderstatus: []\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.state.loading ? React.createElement(\"div\", {\n      className: \"text-center spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      animation: \"border\",\n      size: \"lg\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Loading...\"))) : React.createElement(OrderDataTable, {\n      data: this.state.orderstatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/aliraza/Documents/ReactProject/demoautomotive/src/containers/OrderStatus/OrderStatus.js"],"names":["React","Component","axios","OrderDataTable","Spinner","OrderStatus","constructor","props","state","orderstatus","loading","componentDidMount","console","log","get","then","response","setState","data","catch","err","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAO,mBAAP;AACA,eAAe,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AACjDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID,GAPgD,CASjD;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEAX,IAAAA,KAAK,CACFY,GADH,CACO,yBADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZR,QAAAA,WAAW,EAAEO,QAAQ,CAACE,IADV;AAEZR,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAPH,EAQGS,KARH,CAQSC,GAAG,IAAI;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBO,GAA5B;AACD,KAVH;AAWD;;AAEDC,EAAAA,oBAAoB,GAAE;AACpB,SAAKJ,QAAL,CAAc;AACZR,MAAAA,WAAW,EAAC;AADA,KAAd;AAGD;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACE,0CACG,KAAKd,KAAL,CAAWE,OAAX,GACC;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,IAAI,EAAC,IAAjC;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CADD,GAOC,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADF;AAaD;;AA9CgD","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"../../axios\";\nimport OrderDataTable from \"../../components/OrderDataTable/OrderDataTable\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport \"./OrderStatus.css\";\nexport default class OrderStatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderstatus: [],\n      loading: true\n    };\n  }\n\n  // Fetch data from API after the component have been loaded;\n  componentDidMount() {\n    console.log(\"Counter\");\n\n    axios\n      .get(\"api/values/purchaseList\")\n      .then(response => {\n        this.setState({\n          orderstatus: response.data,\n          loading: false\n        });\n      })\n      .catch(err => {\n        console.log(\"Server Down\" + err);\n      });\n  }\n\n  componentWillUnmount(){\n    this.setState({\n      orderstatus:[]\n    })\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.loading ? (\n          <div className=\"text-center spinner\">\n            <Spinner animation=\"border\" size=\"lg\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n          </div>\n        ) : (\n          <OrderDataTable data={this.state.orderstatus} />\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}