{"ast":null,"code":"import React, { Component } from \"react\";\nimport axios from \"../../../axios\";\nexport default class Dropdowns extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"api/values/selections/\" + this.props.model).then(response => {\n      this.setState({\n        options: response.data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const options = Object.keys(this.state.options).map(el => {\n      if (this.props.model == 'race') {}\n    });\n    return options;\n  }\n\n}","map":{"version":3,"sources":["/home/aliraza/Documents/ReactProject/demoautomotive/src/components/OrderDataTable/Dropdowns/Dropdowns.js"],"names":["React","Component","axios","Dropdowns","constructor","props","state","options","componentDidMount","get","model","then","response","setState","data","catch","err","console","log","render","Object","keys","map","el"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC/CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBN,IAAAA,KAAK,CACFO,GADH,CACO,2BAA2B,KAAKJ,KAAL,CAAWK,KAD7C,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZN,QAAAA,OAAO,EAAEK,QAAQ,CAACE;AADN,OAAd;AAGD,KANH,EAOGC,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;AAQD;;AACDG,EAAAA,MAAM,GAAG;AACP,UAAMZ,OAAO,GAAGa,MAAM,CAACC,IAAP,CAAY,KAAKf,KAAL,CAAWC,OAAvB,EAAgCe,GAAhC,CAAoCC,EAAE,IAAI;AACtD,UAAI,KAAKlB,KAAL,CAAWK,KAAX,IAAoB,MAAxB,EAA+B,CAE9B;AACJ,KAJe,CAAhB;AAKA,WAAOH,OAAP;AACD;;AAzB8C","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"../../../axios\";\n\nexport default class Dropdowns extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"api/values/selections/\" + this.props.model)\n      .then(response => {\n        this.setState({\n          options: response.data\n        });\n      })\n      .catch(err => console.log(err));\n  }\n  render() {\n    const options = Object.keys(this.state.options).map(el => {\n        if (this.props.model == 'race'){\n            \n        }\n    })\n    return options;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}