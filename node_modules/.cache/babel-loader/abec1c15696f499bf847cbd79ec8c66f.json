{"ast":null,"code":"var _jsxFileName = \"/home/aliraza/Documents/ReactProject/demoautomotive/src/containers/OrderStatus/OrderStatus.js\";\nimport React, { Component } from \"react\";\nimport axios from \"../../axios\";\nimport OrderDataTable from \"../../components/OrderDataTable/OrderDataTable\";\nimport Spinner from \"react-bootstrap/Spinner\";\nexport default class OrderStatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderstatus: [],\n      loading: true\n    };\n  } // Fetch data from API after the component have been loaded;\n\n\n  componentDidMount() {\n    axios.get(\"api/values/purchaseList\").then(response => {\n      this.setState({\n        orderstatus: response.data,\n        loading: false\n      });\n    }).catch(err => {\n      console.log(\"Server Down\" + err);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(Spinner, {\n      animation: \"border\",\n      size: \"md\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only text-center \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Loading...\")) : \"\"), React.createElement(OrderDataTable, {\n      data: this.state.orderstatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/aliraza/Documents/ReactProject/demoautomotive/src/containers/OrderStatus/OrderStatus.js"],"names":["React","Component","axios","OrderDataTable","Spinner","OrderStatus","constructor","props","state","orderstatus","loading","componentDidMount","get","then","response","setState","data","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AACjDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID,GAPgD,CASjD;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,KAAK,CACFU,GADH,CACO,yBADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZN,QAAAA,WAAW,EAAEK,QAAQ,CAACE,IADV;AAEZN,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAPH,EAQGO,KARH,CAQSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBF,GAA5B;AACD,KAVH;AAWD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE,0CACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,KAAL,CAAWE,OAAX,GACC,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,IAAI,EAAC,IAAjC;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADD,GAKC,EANJ,CADF,EAUE,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAcD;;AAvCgD","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"../../axios\";\nimport OrderDataTable from \"../../components/OrderDataTable/OrderDataTable\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport default class OrderStatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderstatus: [],\n      loading: true\n    };\n  }\n\n  // Fetch data from API after the component have been loaded;\n  componentDidMount() {\n    axios\n      .get(\"api/values/purchaseList\")\n      .then(response => {\n        this.setState({\n          orderstatus: response.data,\n          loading: false\n        });\n      })\n      .catch(err => {\n        console.log(\"Server Down\" + err);\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"text-center\">\n          {this.state.loading ? (\n            <Spinner animation=\"border\" size=\"md\" role=\"status\">\n              <span className=\"sr-only text-center \">Loading...</span>\n            </Spinner>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <OrderDataTable data={this.state.orderstatus} />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}